import socket

s = socket.socket()
host = socket.gethostname()
port = 5007
s.connect((host, port))
s.send('second.txt'.encode())

with open('recieved_file2.txt', 'wb') as f:
    print('file opened')
    while True:
        data = s.recv(1024).decode()
        if not data:
            break
        print('receiving data...')
        print('data in received file:')
        print(data)
        f.write(data.encode())
    
    f.close()
    print('Successfully got the second file')
    s.close()
    print('connection closed')

3.2

import socket
port = 5007
s = socket.socket()
host = socket.gethostname()
s.bind((host, port))
s.listen(5)
print('Server is listening....')

while True:
    conn, addr = s.accept()
    print('Got connection from', addr)
    data = conn.recv(1024)
    print('Server received', data)
    filename = data
    f = open(filename, 'rb')
    l = f.read(1024)
    
    while l:
        conn.send(l)
        print('Sent', repr(l))
        l = f.read(1024)
    
    f.close()
    print('Done sending')
    conn.close()

3









import socket

def server_program():
    host = socket.gethostname()
    port = 5003
    
    server_socket = socket.socket()
    server_socket.bind((host, port))
    server_socket.listen(2)
    conn, address = server_socket.accept()

    while True:
        data = conn.recv(1024).decode()
        if not data:
            conn.close()
            break
        print("Received message: " + data)
        response = input('Enter response: ')
        conn.send(response.encode())

if __name__ == '__main__':
    server_program()

1




import socket

def client_program():
    host = socket.gethostname()
    port = 5003
    client_socket = socket.socket()
    client_socket.connect((host, port))

    message = input("Enter message: ")
    while message.lower().strip() != 'bye':
        client_socket.send(message.encode())
        data = client_socket.recv(1024).decode()
        print('Received message: ' + data)
        message = input("Enter message: ")

    client_socket.close()

if __name__ == '__main__':
    client_program()

1.1
